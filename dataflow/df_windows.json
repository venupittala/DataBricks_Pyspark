{
	"name": "df_windows",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_adlsgen2_window_csv_source",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_adlsgen2_sales_emp_csv",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "ds_adlsgen2_emp_csv_source",
						"type": "DatasetReference"
					},
					"name": "Ramdata"
				},
				{
					"dataset": {
						"referenceName": "ds_adlsgen2_emp_csv_source",
						"type": "DatasetReference"
					},
					"name": "Khadar"
				},
				{
					"dataset": {
						"referenceName": "ds_adlsgen2_emp_csv_source",
						"type": "DatasetReference"
					},
					"name": "othersdata"
				}
			],
			"transformations": [
				{
					"name": "Window1"
				},
				{
					"name": "ConditionalSplit1"
				}
			],
			"script": "source(output(\n\t\tname as string,\n\t\tdate as string,\n\t\tproduct as string,\n\t\t{price } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 window(over(product_names = name),\n\tdesc({price }, true),\n\trank = rank(),\n\t\tdense_rank = denseRank(),\n\t\tlead = lead({price }),\n\t\tlag = lag({price })) ~> Window1\nsource1 split(name=='Ram',\n\tname=='Khadar',\n\tdisjoint: false) ~> ConditionalSplit1@(name, namekhadar, others)\nWindow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['widndow_Data.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nConditionalSplit1@name sink(input(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ram_data.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Ramdata\nConditionalSplit1@namekhadar sink(input(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['khadar_data.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Khadar\nConditionalSplit1@others sink(input(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['others_Data.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> othersdata"
		}
	}
}